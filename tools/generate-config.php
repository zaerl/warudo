<?php
// phpcs:ignoreFile

if(php_sapi_name() !== 'cli') {
    echo 'This script can only be run from the command line.';
    exit(1);
}

if($argc < 2 || !in_array($argv[1], ['h', 'c', 'conf'])) {
    echo "Usage: php generate-config.php h|c|conf\n";
    exit(1);
}

$map = [
    '# Database' => '',
    'db_path' => 'file:warudo.db',
    '# Net' => '',
    'listen_backlog' => 1024,
    'max_columns' => 64,
    'net_buffer_size' => 1,
    'net_headers_buffer_size' => 4096,
    'net_input_buffer_size' => 1,
    'socket_port' => 6251,
];

// Configuration file.
$confs = [];

// H header file.
$defines = [];
$structs = [];

// C file.
$init_configs = [];

// Loop through each line
foreach($map as $name => $value) {
    // A section
    if(str_starts_with($name, '#')) {
        $comment = "// " . substr($name, 2);
        // Configuration file.
        $confs[] = "\n" . $name;

        // H file.
        $defines[] = "\n" . $comment;
        $structs[] = '    ' . $comment;

        // C file.
        $init_configs[] = '    ' . $comment;

        continue;
    }

    $is_integer = is_int($value);
    $define_name = strtoupper($name);
    $define = 'WRD_DEFAULT_' . $define_name;
    $type = $is_integer ? 'int ' : 'char *';
    $env_function = $is_integer ? 'wrd_get_env_int' : 'wrd_get_env_string';

    // Configuration file.
    $confs[] = $name . ' = ' . $value;

    // H file.
    $defines[] = '#define ' . $define . ' ' . ($is_integer ? $value : '"' . $value . '"');
    $structs[] = "    {$type}{$name};";

    // C file.
    $init_configs[] = "    config->{$name} = {$env_function}(\"WRD_{$define_name}\", {$define});";
}

$warning_message = '// This file is generated by `make generate_config`. Do not edit it manually.';

if ($argv[1] === 'h'): ?>
#ifndef WRD_CONF_H
#define WRD_CONF_H

<?php echo $warning_message, "\n"; ?>

#ifdef __cplusplus
extern "C" {
#endif
<?php echo join("\n", $defines), "\n"; ?>

typedef struct wrd_config {
<?php echo join("\n", $structs), "\n"; ?>
} wrd_config;

// Load a configuration file.
void wrd_init_config(wrd_config *config);

// Load a configuration file.
void wrd_load_config(wrd_config *config, const char *input);

#ifdef __cplusplus
}
#endif

#endif // WRD_CONF_H
<?php elseif ($argv[1] === 'c'): ?>
#include "conf.h"
#include "env.h"

<?php echo $warning_message, "\n"; ?>

// Init a configuration file with environment variables.
void wrd_init_config(wrd_config *config) {
<?php echo join("\n", $init_configs), "\n"; ?>
}

// Load a configuration file.
void wrd_load_config(wrd_config *config, const char *input) {
    wrd_init_config(config);
}
<?php elseif ($argv[1] === 'conf'): ?>
# This is the Warudo default configuration file.
# Lines starting with a '#' character are ignored as well as empty lines.

# A configuration is in the `name = value` form. `name=value` form is ok.
# The file must be UTF-8 encoded, line ending can be \n, \r\n. Multiple spaces
# at the end of a line are ignored

# All configuration can also be passed as an environment variable to the
# executable. Example socket_port can be passed as WRD_SOCKET_PORT variable.
<?php echo join("\n", $confs); ?>

<?php endif;
